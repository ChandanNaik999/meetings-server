(()=>{var e,t={4559:(e,t,r)=>{e.exports=r(9335)},6198:(e,t,r)=>{"use strict";r(4039);var n=r(3379),a=r.n(n),o=r(7795),s=r.n(o),i=r(569),c=r.n(i),l=r(3565),m=r.n(l),d=r(9216),u=r.n(d),p=r(4589),A=r.n(p),g=r(5389),f={};f.styleTagTransform=A(),f.setAttributes=m(),f.insert=c().bind(null,"head"),f.domAPI=s(),f.insertStyleElement=u(),a()(g.Z,f),g.Z&&g.Z.locals&&g.Z.locals;var h=r(6076),v={};v.styleTagTransform=A(),v.setAttributes=m(),v.insert=c().bind(null,"head"),v.domAPI=s(),v.insertStyleElement=u(),a()(h.Z,v),h.Z&&h.Z.locals&&h.Z.locals;var w="/api",y="token",b="name",x="success",C="error";const E=function(e,t,r){var n=Math.max(Math.ceil(1e3*e.length/25),1100),a=document.createElement("div");a.setAttribute("class","mytoast-wrapper");var o=document.createElement("div");r===x?o.setAttribute("class","mytoast mytoast-success"):o.setAttribute("class","mytoast mytoast-error"),a.appendChild(o);var s=document.createElement("div");s.setAttribute("class","content"),o.appendChild(s);var i=document.createElement("p");i.style.marginBottom=0,i.innerHTML=e,s.appendChild(i),t.appendChild(a),a.classList.remove("hide"),a.classList.add("show"),setTimeout((function(){a.classList.add("hide"),setTimeout((function(){a.remove()}),1e3)}),n)};var B=r(4559),I=r.n(B);function k(){return localStorage.getItem(y)}function M(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function L(e,t,r,n,a,o,s){try{var i=e[o](s),c=i.value}catch(e){return void r(e)}i.done?t(c):Promise.resolve(c).then(n,a)}function S(e){return function(){var t=this,r=arguments;return new Promise((function(n,a){var o=e.apply(t,r);function s(e){L(o,n,a,s,i,"next",e)}function i(e){L(o,n,a,s,i,"throw",e)}s(void 0)}))}}function T(){return(T=S(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,I().get("".concat(w,"/teams"),{headers:{Authorization:"".concat(k())}});case 2:return t=e.sent,e.abrupt("return",t.data);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function z(){return(z=S(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,I().post("".concat(w,"/teams/"),t,{headers:{Authorization:"".concat(k())}});case 2:return r=e.sent,e.abrupt("return",r.data);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function j(){return(j=S(regeneratorRuntime.mark((function e(t,r){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,I().patch("".concat(w,"/teams/").concat(t._id,"?action=add_member&email=").concat(r),{},{headers:{Authorization:"".concat(k())}});case 2:return n=e.sent,e.abrupt("return",n.data);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function X(){return(X=S(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,I().patch("".concat(w,"/teams/").concat(t._id,"?action=remove_member"),{},{headers:{Authorization:"".concat(k())}});case 2:return r=e.sent,e.abrupt("return",r.data);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}!function(){null===localStorage.getItem(y)&&(window.location="/login"),document.getElementById("logoutLink").addEventListener("click",(function(){localStorage.removeItem(y),localStorage.removeItem(b),localStorage.removeItem("email"),window.location="/login"}));var e,t,r=(e=localStorage.getItem(b).split(" "),t=1,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,a,o=[],s=!0,i=!1;try{for(r=r.call(e);!(s=(n=r.next()).done)&&(o.push(n.value),!t||o.length!==t);s=!0);}catch(e){i=!0,a=e}finally{try{s||null==r.return||r.return()}finally{if(i)throw a}}return o}}(e,t)||function(e,t){if(e){if("string"==typeof e)return M(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?M(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0];document.getElementById("nameNav").innerHTML=r}(),r(1283),r(7588);const Z={name:"Agile team 57",shortName:"agilenew",description:"Team spreading awareness about Agile practices at Zwiggy",members:[]};function _(e,t,r,n,a,o,s){try{var i=e[o](s),c=i.value}catch(e){return void r(e)}i.done?t(c):Promise.resolve(c).then(n,a)}function H(e){return function(){var t=this,r=arguments;return new Promise((function(n,a){var o=e.apply(t,r);function s(e){_(o,n,a,s,i,"next",e)}function i(e){_(o,n,a,s,i,"throw",e)}s(void 0)}))}}function O(){return(O=H(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,I().get("".concat(w,"/users"),{headers:{Authorization:"".concat(k())}});case 2:return t=e.sent,e.abrupt("return",t.data);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var R=[];var P=null;document.getElementById("addNewTeamButton").addEventListener("click",(function(){(P=new bootstrap.Modal(document.getElementById("myModal"))).show()})),document.getElementById("modalDismiss").addEventListener("click",(function(){P.hide()})),document.getElementById("submitAddTeam").addEventListener("click",(function(){P.hide();var e,t=document.getElementById("inputTeamName").value,r=document.getElementById("inputShortName").value,n=document.getElementById("teamDescription").value,a=document.getElementById("inputMembers").value.replace(/\s+/g,"").split(","),o=Z;o.name=t,o.shortName=r,o.description=n;for(var s=[],i=0;i<a.length;i+=1){var c=a[i];switch(e=c,/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase())?"email":/@[a-zA-Z\-0-9]+$/.test(String(e).toLowerCase())?"team":"none"){case"email":for(var l=0;l<R.length;l+=1)if(c.toLowerCase()===R[l].email.toLowerCase()){s.push({userId:R[l]._id,email:R[l].email});break}}}o.members=s,function(e){return z.apply(this,arguments)}(o).then((function(e){e.message===x?(P.hide(),E("Team added successfully",document.body,x)):E("Error adding team: ".concat(e.message),document.body,C)})).catch((function(e){P.hide();try{E("Error adding team: ".concat(e.response.data.description),document.body,C)}catch(t){E("Error adding team: ".concat(e.message),document.body,C)}}))})),null===localStorage.getItem(y)&&(window.location="/login"),function(){return T.apply(this,arguments)}().then((function(e){e.message===x?function(){return O.apply(this,arguments)}().then((function(t){t.message===x?(R=t.data,function(e){var t=document.getElementById("teamsList");t.innerHTML="",e&&e.length>0?(document.getElementById("teamsListTitle").innerHTML="View and edit the teams that you are part of",e.forEach((function(e){var r=[];e.members.forEach((function(e){r.push(e.email)}));var n=document.createElement("div");n.setAttribute("class","card my-col p-3 m-2");var a=document.createElement("div");a.setAttribute("class","card-body");var o=document.createElement("h5");o.setAttribute("class","card-title"),o.innerHTML=e.name,a.appendChild(o);var s=document.createElement("p");o.setAttribute("class","card-text"),s.innerHTML="@".concat(e.shortName),a.appendChild(s);var i=document.createElement("button");i.innerHTML="Excuse Yourself",i.setAttribute("class","btn btn-danger"),i.addEventListener("click",(function(){(function(e){return X.apply(this,arguments)})(e).then((function(e){e.message===x?(E("You have been removed from the team",document.body,x),n.remove()):E("Error removing: ".concat(e.message),document.body,C)})).catch((function(e){try{E("Error removing: ".concat(e.response.data.description),document.body,C)}catch(t){E("Error removing: ".concat(e.message),document.body,C)}}))})),a.appendChild(i);var c=document.createElement("hr");c.setAttribute("class","my-3"),a.appendChild(c);var l=document.createElement("p");l.innerHTML="<strong>Members: </strong> ".concat(r.join(", ")),a.appendChild(l);var m=document.createElement("div");m.setAttribute("class","row gy-2 gx-3 align-items-center");var d=document.createElement("div");d.setAttribute("class","col-auto");var u=document.createElement("label");u.setAttribute("class","visually-hidden"),u.setAttribute("for","selectMember"),d.appendChild(u);var p=document.createElement("select");p.setAttribute("class","form-select"),p.setAttribute("id","selectMember"),p.setAttribute("aria-label","Select Member");var A=[];R.forEach((function(e){!1===r.includes(e.email)&&A.push(e)})),p.innerHTML='<option value="none" selected>Select member</option>',A.forEach((function(e){p.innerHTML+='<option value="'.concat(e.email,'">').concat(e.email,"</option>")})),d.appendChild(p),m.appendChild(d);var g=document.createElement("div");g.setAttribute("class","col-auto");var f=document.createElement("button");f.setAttribute("class","btn btn-info text-white"),f.innerHTML="Add",f.addEventListener("click",(function(){"none"!==p.value&&function(e,t){return j.apply(this,arguments)}(e,p.value).then((function(e){e.message===x?(r.push(p.value),l.innerHTML="<strong>Attendees: </strong> ".concat(r.join(", ")),E("Added member successfully",document.body,x)):E("Error adding member: ".concat(e.message),document.body,C)})).catch((function(e){try{E("Error adding member: ".concat(e.response.data.description),document.body,C)}catch(t){E("Error adding member: ".concat(e.message),document.body,C)}}))})),g.appendChild(f),m.appendChild(g),a.appendChild(m),n.appendChild(a),t.appendChild(n)}))):document.getElementById("teamsListTitle").innerHTML="Sorry:( you are not part of any team."}(e.data)):E("Error fetching users: ".concat(t.message),document.body,C)})).catch((function(e){try{E("Error fetching users: ".concat(e.response.data.description),document.body,C)}catch(t){E("Error fetching users: ".concat(e.message),document.body,C)}})):E("Error fetching teams: ".concat(e.message),document.body,C)})).catch((function(e){try{E("Error fetching teams: ".concat(e.response.data.description),document.body,C)}catch(t){E("Error fetching teams: ".concat(e.message),document.body,C)}}))},5389:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});var n=r(6880),a=r.n(n),o=r(7705),s=r.n(o)()(a());s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@200;300;400;600;700&display=swap);"]),s.push([e.id,"* {\r\n  box-sizing: border-box;\r\n  font-family: 'Source Sans Pro', sans-serif;;\r\n}\r\nbody{\r\n  /* overflow: hidden; */\r\n  background: #f2f2f2;\r\n  position: relative;\r\n}\r\n.mytoast-wrapper{\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  opacity: 0;\r\n  pointer-events: none; \r\n  height: auto;\r\n}\r\n\r\n.mytoast-wrapper.show{\r\n  opacity: 1;\r\n  animation: show_mytoast 1s ease forwards;\r\n}\r\n\r\n@keyframes show_mytoast {\r\n    0%{\r\n      transform: translateX(100%);\r\n    }\r\n    40%{\r\n      transform: translateX(-5%);\r\n    }\r\n    80%{\r\n      transform: translateX(0%);\r\n    }\r\n    100%{\r\n      transform: translateX(-5px);\r\n    }\r\n  }\r\n\r\n.mytoast-wrapper.hide{\r\n  animation: hide_mytoast 1s ease forwards;\r\n}\r\n\r\n@keyframes hide_mytoast {\r\n    0%{\r\n      transform: translateX(-5px);\r\n    }\r\n    40%{\r\n      transform: translateX(0%);\r\n    }\r\n    80%{\r\n        opacity: 0.8;\r\n    pointer-events: none; \r\n      transform: translateX(-5%);\r\n    }\r\n    100%{\r\n        opacity: 0;\r\n    pointer-events: none;   \r\n      transform: translateX(100%);\r\n    }\r\n  }\r\n\r\n.mytoast-wrapper .mytoast {\r\n  background: #fff;\r\n  padding: 20px 15px 20px 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 7px 14px -5px rgba(0,0,0,0.15);\r\n  width: 430px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.mytoast-success {\r\n  border-left: 4px solid #2ecc71;\r\n}\r\n\r\n.mytoast-error {\r\n  border-left: 4px solid #ef5350;\r\n}\r\n\r\n.mytoast .content{\r\n  display: flex;\r\n  align-items: center;\r\n}","",{version:3,sources:["webpack://./public/css/main.css"],names:[],mappings:"AACA;EACE,sBAAsB;EACtB,0CAA0C;AAC5C;AACA;EACE,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,UAAU;EACV,oBAAoB;EACpB,YAAY;AACd;;AAEA;EACE,UAAU;EACV,wCAAwC;AAC1C;;AAEA;IACI;MACE,2BAA2B;IAC7B;IACA;MACE,0BAA0B;IAC5B;IACA;MACE,yBAAyB;IAC3B;IACA;MACE,2BAA2B;IAC7B;EACF;;AAEF;EACE,wCAAwC;AAC1C;;AAEA;IACI;MACE,2BAA2B;IAC7B;IACA;MACE,yBAAyB;IAC3B;IACA;QACI,YAAY;IAChB,oBAAoB;MAClB,0BAA0B;IAC5B;IACA;QACI,UAAU;IACd,oBAAoB;MAClB,2BAA2B;IAC7B;EACF;;AAEF;EACE,gBAAgB;EAChB,4BAA4B;EAC5B,mBAAmB;EACnB,8CAA8C;EAC9C,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@200;300;400;600;700&display=swap');\r\n* {\r\n  box-sizing: border-box;\r\n  font-family: 'Source Sans Pro', sans-serif;;\r\n}\r\nbody{\r\n  /* overflow: hidden; */\r\n  background: #f2f2f2;\r\n  position: relative;\r\n}\r\n.mytoast-wrapper{\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  opacity: 0;\r\n  pointer-events: none; \r\n  height: auto;\r\n}\r\n\r\n.mytoast-wrapper.show{\r\n  opacity: 1;\r\n  animation: show_mytoast 1s ease forwards;\r\n}\r\n\r\n@keyframes show_mytoast {\r\n    0%{\r\n      transform: translateX(100%);\r\n    }\r\n    40%{\r\n      transform: translateX(-5%);\r\n    }\r\n    80%{\r\n      transform: translateX(0%);\r\n    }\r\n    100%{\r\n      transform: translateX(-5px);\r\n    }\r\n  }\r\n\r\n.mytoast-wrapper.hide{\r\n  animation: hide_mytoast 1s ease forwards;\r\n}\r\n\r\n@keyframes hide_mytoast {\r\n    0%{\r\n      transform: translateX(-5px);\r\n    }\r\n    40%{\r\n      transform: translateX(0%);\r\n    }\r\n    80%{\r\n        opacity: 0.8;\r\n    pointer-events: none; \r\n      transform: translateX(-5%);\r\n    }\r\n    100%{\r\n        opacity: 0;\r\n    pointer-events: none;   \r\n      transform: translateX(100%);\r\n    }\r\n  }\r\n\r\n.mytoast-wrapper .mytoast {\r\n  background: #fff;\r\n  padding: 20px 15px 20px 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 7px 14px -5px rgba(0,0,0,0.15);\r\n  width: 430px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.mytoast-success {\r\n  border-left: 4px solid #2ecc71;\r\n}\r\n\r\n.mytoast-error {\r\n  border-left: 4px solid #ef5350;\r\n}\r\n\r\n.mytoast .content{\r\n  display: flex;\r\n  align-items: center;\r\n}"],sourceRoot:""}]);const i=s},6076:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});var n=r(6880),a=r.n(n),o=r(7705),s=r.n(o)()(a());s.push([e.id,":root {\r\n    font-size: 16px;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n\r\n.my-col {\r\n    flex-basis: 30%;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n}\r\n\r\nhr {\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n    border: 0;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n}","",{version:3,sources:["webpack://./public/css/teams_list.css"],names:[],mappings:"AAAA;IACI,eAAe;AACnB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;IACnB,SAAS;IACT,wCAAwC;AAC5C",sourcesContent:[":root {\r\n    font-size: 16px;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n\r\n.my-col {\r\n    flex-basis: 30%;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n}\r\n\r\nhr {\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n    border: 0;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n}"],sourceRoot:""}]);const i=s},5585:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%272%27 fill=%27%23fff%27/%3e%3c/svg%3e"},902:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%2386b7fe%27/%3e%3c/svg%3e"},9646:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e"},2034:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%280, 0, 0, 0.25%29%27/%3e%3c/svg%3e"},2774:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 12 12%27 width=%2712%27 height=%2712%27 fill=%27none%27 stroke=%27%23dc3545%27%3e%3ccircle cx=%276%27 cy=%276%27 r=%274.5%27/%3e%3cpath stroke-linejoin=%27round%27 d=%27M5.8 3.6h.4L6 6.5z%27/%3e%3ccircle cx=%276%27 cy=%278.2%27 r=%27.6%27 fill=%27%23dc3545%27 stroke=%27none%27/%3e%3c/svg%3e"},7483:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23000%27%3e%3cpath d=%27M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z%27/%3e%3c/svg%3e"},8636:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%230c63e4%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},8931:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23212529%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},5719:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z%27/%3e%3c/svg%3e"},7407:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},1872:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23343a40%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27M2 5l6 6 6-6%27/%3e%3c/svg%3e"},7161:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27M6 10h8%27/%3e%3c/svg%3e"},9098:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27M6 10l3 3l6-6%27/%3e%3c/svg%3e"},9788:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%280, 0, 0, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e"},8432:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%28255, 255, 255, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e"},2615:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23198754%27 d=%27M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z%27/%3e%3c/svg%3e"}},r={};function n(e){var a=r[e];if(void 0!==a)return a.exports;var o=r[e]={id:e,exports:{}};return t[e](o,o.exports,n),o.exports}n.m=t,e=[],n.O=(t,r,a,o)=>{if(!r){var s=1/0;for(m=0;m<e.length;m++){for(var[r,a,o]=e[m],i=!0,c=0;c<r.length;c++)(!1&o||s>=o)&&Object.keys(n.O).every((e=>n.O[e](r[c])))?r.splice(c--,1):(i=!1,o<s&&(s=o));if(i){e.splice(m--,1);var l=a();void 0!==l&&(t=l)}}return t}o=o||0;for(var m=e.length;m>0&&e[m-1][2]>o;m--)e[m]=e[m-1];e[m]=[r,a,o]},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{n.b=document.baseURI||self.location.href;var e={856:0};n.O.j=t=>0===e[t];var t=(t,r)=>{var a,o,[s,i,c]=r,l=0;for(a in i)n.o(i,a)&&(n.m[a]=i[a]);if(c)var m=c(n);for(t&&t(r);l<s.length;l++)o=s[l],n.o(e,o)&&e[o]&&e[o][0](),e[s[l]]=0;return n.O(m)},r=self.webpackChunkmeetings=self.webpackChunkmeetings||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var a=n.O(void 0,[660],(()=>n(6198)));a=n.O(a)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,