(()=>{var r,e={4559:(r,e,t)=>{r.exports=t(9335)},6947:(r,e,t)=>{"use strict";t(4039);var n=t(3379),s=t.n(n),o=t(7795),a=t.n(o),i=t(569),c=t.n(i),l=t(3565),p=t.n(l),A=t(9216),m=t.n(A),d=t(4589),g=t.n(d),u=t(5389),f={};f.styleTagTransform=g(),f.setAttributes=p(),f.insert=c().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=m(),s()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals,t(1283),t(7588);var v="/api",w="success",h="error";const x=function(r,e,t){var n=Math.max(Math.ceil(1e3*r.length/25),1100),s=document.createElement("div");s.setAttribute("class","mytoast-wrapper");var o=document.createElement("div");t===w?o.setAttribute("class","mytoast mytoast-success"):o.setAttribute("class","mytoast mytoast-error"),s.appendChild(o);var a=document.createElement("div");a.setAttribute("class","content"),o.appendChild(a);var i=document.createElement("p");i.style.marginBottom=0,i.innerHTML=r,a.appendChild(i),e.appendChild(s),s.classList.remove("hide"),s.classList.add("show"),setTimeout((function(){s.classList.add("hide"),setTimeout((function(){s.remove()}),1e3)}),n)};var C=t(4559),B=t.n(C);function y(r,e,t,n,s,o,a){try{var i=r[o](a),c=i.value}catch(r){return void t(r)}i.done?e(c):Promise.resolve(c).then(n,s)}function E(r){return function(){var e=this,t=arguments;return new Promise((function(n,s){var o=r.apply(e,t);function a(r){y(o,n,s,a,i,"next",r)}function i(r){y(o,n,s,a,i,"throw",r)}a(void 0)}))}}function b(){return(b=E(regeneratorRuntime.mark((function r(e){var t;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,B().post("".concat(v,"/auth/register"),e,{headers:{"Content-Type":"application/json"}});case 2:return t=r.sent,r.abrupt("return",t.data);case 4:case"end":return r.stop()}}),r)})))).apply(this,arguments)}document.getElementById("register-form").addEventListener("submit",(function(r){r.preventDefault();var e=document.querySelector("#nameInput"),t=document.querySelector("#emailInput"),n=document.querySelector("#passwordInput");(function(r){return b.apply(this,arguments)})({name:e.value,email:t.value,password:n.value}).then((function(r){r.message===w?(x("Registration Successful",document.body,w),setTimeout((function(){window.location="/login"}),2e3)):x("Registration Error: ".concat(r.message),document.body,h)})).catch((function(r){try{x("Registration Error: ".concat(r.response.data.description),document.body,h)}catch(e){x("Registration Error: ".concat(r.message),document.body,h)}}))}))},5389:(r,e,t)=>{"use strict";t.d(e,{Z:()=>i});var n=t(6880),s=t.n(n),o=t(7705),a=t.n(o)()(s());a.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@200;300;400;600;700&display=swap);"]),a.push([r.id,"* {\r\n  box-sizing: border-box;\r\n  font-family: 'Source Sans Pro', sans-serif;;\r\n}\r\nbody{\r\n  /* overflow: hidden; */\r\n  background: #f2f2f2;\r\n  position: relative;\r\n}\r\n.mytoast-wrapper{\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  opacity: 0;\r\n  pointer-events: none; \r\n  height: auto;\r\n}\r\n\r\n.mytoast-wrapper.show{\r\n  opacity: 1;\r\n  animation: show_mytoast 1s ease forwards;\r\n}\r\n\r\n@keyframes show_mytoast {\r\n    0%{\r\n      transform: translateX(100%);\r\n    }\r\n    40%{\r\n      transform: translateX(-5%);\r\n    }\r\n    80%{\r\n      transform: translateX(0%);\r\n    }\r\n    100%{\r\n      transform: translateX(-5px);\r\n    }\r\n  }\r\n\r\n.mytoast-wrapper.hide{\r\n  animation: hide_mytoast 1s ease forwards;\r\n}\r\n\r\n@keyframes hide_mytoast {\r\n    0%{\r\n      transform: translateX(-5px);\r\n    }\r\n    40%{\r\n      transform: translateX(0%);\r\n    }\r\n    80%{\r\n        opacity: 0.8;\r\n    pointer-events: none; \r\n      transform: translateX(-5%);\r\n    }\r\n    100%{\r\n        opacity: 0;\r\n    pointer-events: none;   \r\n      transform: translateX(100%);\r\n    }\r\n  }\r\n\r\n.mytoast-wrapper .mytoast {\r\n  background: #fff;\r\n  padding: 20px 15px 20px 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 7px 14px -5px rgba(0,0,0,0.15);\r\n  width: 430px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.mytoast-success {\r\n  border-left: 4px solid #2ecc71;\r\n}\r\n\r\n.mytoast-error {\r\n  border-left: 4px solid #ef5350;\r\n}\r\n\r\n.mytoast .content{\r\n  display: flex;\r\n  align-items: center;\r\n}","",{version:3,sources:["webpack://./public/css/main.css"],names:[],mappings:"AACA;EACE,sBAAsB;EACtB,0CAA0C;AAC5C;AACA;EACE,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,UAAU;EACV,oBAAoB;EACpB,YAAY;AACd;;AAEA;EACE,UAAU;EACV,wCAAwC;AAC1C;;AAEA;IACI;MACE,2BAA2B;IAC7B;IACA;MACE,0BAA0B;IAC5B;IACA;MACE,yBAAyB;IAC3B;IACA;MACE,2BAA2B;IAC7B;EACF;;AAEF;EACE,wCAAwC;AAC1C;;AAEA;IACI;MACE,2BAA2B;IAC7B;IACA;MACE,yBAAyB;IAC3B;IACA;QACI,YAAY;IAChB,oBAAoB;MAClB,0BAA0B;IAC5B;IACA;QACI,UAAU;IACd,oBAAoB;MAClB,2BAA2B;IAC7B;EACF;;AAEF;EACE,gBAAgB;EAChB,4BAA4B;EAC5B,mBAAmB;EACnB,8CAA8C;EAC9C,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@200;300;400;600;700&display=swap');\r\n* {\r\n  box-sizing: border-box;\r\n  font-family: 'Source Sans Pro', sans-serif;;\r\n}\r\nbody{\r\n  /* overflow: hidden; */\r\n  background: #f2f2f2;\r\n  position: relative;\r\n}\r\n.mytoast-wrapper{\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  opacity: 0;\r\n  pointer-events: none; \r\n  height: auto;\r\n}\r\n\r\n.mytoast-wrapper.show{\r\n  opacity: 1;\r\n  animation: show_mytoast 1s ease forwards;\r\n}\r\n\r\n@keyframes show_mytoast {\r\n    0%{\r\n      transform: translateX(100%);\r\n    }\r\n    40%{\r\n      transform: translateX(-5%);\r\n    }\r\n    80%{\r\n      transform: translateX(0%);\r\n    }\r\n    100%{\r\n      transform: translateX(-5px);\r\n    }\r\n  }\r\n\r\n.mytoast-wrapper.hide{\r\n  animation: hide_mytoast 1s ease forwards;\r\n}\r\n\r\n@keyframes hide_mytoast {\r\n    0%{\r\n      transform: translateX(-5px);\r\n    }\r\n    40%{\r\n      transform: translateX(0%);\r\n    }\r\n    80%{\r\n        opacity: 0.8;\r\n    pointer-events: none; \r\n      transform: translateX(-5%);\r\n    }\r\n    100%{\r\n        opacity: 0;\r\n    pointer-events: none;   \r\n      transform: translateX(100%);\r\n    }\r\n  }\r\n\r\n.mytoast-wrapper .mytoast {\r\n  background: #fff;\r\n  padding: 20px 15px 20px 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 7px 14px -5px rgba(0,0,0,0.15);\r\n  width: 430px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.mytoast-success {\r\n  border-left: 4px solid #2ecc71;\r\n}\r\n\r\n.mytoast-error {\r\n  border-left: 4px solid #ef5350;\r\n}\r\n\r\n.mytoast .content{\r\n  display: flex;\r\n  align-items: center;\r\n}"],sourceRoot:""}]);const i=a},5585:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%272%27 fill=%27%23fff%27/%3e%3c/svg%3e"},902:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%2386b7fe%27/%3e%3c/svg%3e"},9646:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e"},2034:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%280, 0, 0, 0.25%29%27/%3e%3c/svg%3e"},2774:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 12 12%27 width=%2712%27 height=%2712%27 fill=%27none%27 stroke=%27%23dc3545%27%3e%3ccircle cx=%276%27 cy=%276%27 r=%274.5%27/%3e%3cpath stroke-linejoin=%27round%27 d=%27M5.8 3.6h.4L6 6.5z%27/%3e%3ccircle cx=%276%27 cy=%278.2%27 r=%27.6%27 fill=%27%23dc3545%27 stroke=%27none%27/%3e%3c/svg%3e"},7483:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23000%27%3e%3cpath d=%27M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z%27/%3e%3c/svg%3e"},8636:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%230c63e4%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},8931:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23212529%27%3e%3cpath fill-rule=%27evenodd%27 d=%27M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},5719:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z%27/%3e%3c/svg%3e"},7407:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27 fill=%27%23fff%27%3e%3cpath d=%27M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z%27/%3e%3c/svg%3e"},1872:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 16 16%27%3e%3cpath fill=%27none%27 stroke=%27%23343a40%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%272%27 d=%27M2 5l6 6 6-6%27/%3e%3c/svg%3e"},7161:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27M6 10h8%27/%3e%3c/svg%3e"},9098:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 20%27%3e%3cpath fill=%27none%27 stroke=%27%23fff%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27 stroke-width=%273%27 d=%27M6 10l3 3l6-6%27/%3e%3c/svg%3e"},9788:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%280, 0, 0, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e"},8432:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%28255, 255, 255, 0.55%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e"},2615:r=>{"use strict";r.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23198754%27 d=%27M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z%27/%3e%3c/svg%3e"}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.m=e,r=[],n.O=(e,t,s,o)=>{if(!t){var a=1/0;for(p=0;p<r.length;p++){for(var[t,s,o]=r[p],i=!0,c=0;c<t.length;c++)(!1&o||a>=o)&&Object.keys(n.O).every((r=>n.O[r](t[c])))?t.splice(c--,1):(i=!1,o<a&&(a=o));if(i){r.splice(p--,1);var l=s();void 0!==l&&(e=l)}}return e}o=o||0;for(var p=r.length;p>0&&r[p-1][2]>o;p--)r[p]=r[p-1];r[p]=[t,s,o]},n.n=r=>{var e=r&&r.__esModule?()=>r.default:()=>r;return n.d(e,{a:e}),e},n.d=(r,e)=>{for(var t in e)n.o(e,t)&&!n.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:e[t]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),n.o=(r,e)=>Object.prototype.hasOwnProperty.call(r,e),(()=>{n.b=document.baseURI||self.location.href;var r={685:0};n.O.j=e=>0===r[e];var e=(e,t)=>{var s,o,[a,i,c]=t,l=0;for(s in i)n.o(i,s)&&(n.m[s]=i[s]);if(c)var p=c(n);for(e&&e(t);l<a.length;l++)o=a[l],n.o(r,o)&&r[o]&&r[o][0](),r[a[l]]=0;return n.O(p)},t=self.webpackChunkmeetings=self.webpackChunkmeetings||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))})();var s=n.O(void 0,[660],(()=>n(6947)));s=n.O(s)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,